# -*- coding: utf-8 -*-
"""OssProject#2-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ofuZn8sZXNQzko0n2P-EjWb5FOQcBd8m
"""

import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVR

def sort_dataset(dataset_df):
    dataset_df_sort = dataset_df.sort_values(by='year')
    return dataset_df_sort

def split_dataset(dataset_df):
    dataset_df['salary'] *= 0.001

    train_df = dataset_df.iloc[:1718]
    test_df = dataset_df.iloc[1718:]

    X_train = train_df.drop('salary', axis=1)
    Y_train = train_df['salary']

    X_test = test_df.drop('salary', axis=1)
    Y_test = test_df['salary']

    return X_train, X_test, Y_train, Y_test

def extract_numerical_cols(dataset_df):
    numerical_cols = ['age', 'G', 'PA', 'AB', 'R', 'H', '2B', '3B', 'HR', 'RBI',
                      'SB', 'CS', 'BB', 'HBP', 'SO', 'GDP', 'fly', 'war']
    dataset_df_nc = dataset_df.reindex(columns=numerical_cols)
    return dataset_df_nc

def train_predict_decision_tree(X_train, Y_train, X_test):
    dt_model = DecisionTreeRegressor()
    dt_model.fit(X_train, Y_train)
    dt_predictions = dt_model.predict(X_test)
    return dt_predictions

def train_predict_random_forest(X_train, Y_train, X_test):
    rf_model = RandomForestRegressor()
    rf_model.fit(X_train, Y_train)
    rf_predictions = rf_model.predict(X_test)
    return rf_predictions

def train_predict_svm(X_train, Y_train, X_test):
    svm_pipe = make_pipeline(StandardScaler(), SVR())
    svm_pipe.fit(X_train, Y_train)
    svm_predictions = svm_pipe.predict(X_test)
    return svm_predictions

def calculate_RMSE(labels, predictions):
    rmse = np.sqrt(np.mean((predictions-labels)**2))
    return rmse

if __name__=='__main__':
    #DO NOT MODIFY THIS FUNCTION UNLESS PATH TO THE CSV MUST BE CHANGED.
    data_df = pd.read_csv('/content/drive/MyDrive/2019_kbo_for_kaggle_v2.csv')

    sorted_df = sort_dataset(data_df)
    X_train, X_test, Y_train, Y_test = split_dataset(sorted_df)

    X_train = extract_numerical_cols(X_train)
    X_test = extract_numerical_cols(X_test)

    dt_predictions = train_predict_decision_tree(X_train, Y_train, X_test)
    rf_predictions = train_predict_random_forest(X_train, Y_train, X_test)
    svm_predictions = train_predict_svm(X_train, Y_train, X_test)

    print ("Decision Tree Test RMSE: ", calculate_RMSE(Y_test, dt_predictions))
    print ("Random Forest Test RMSE: ", calculate_RMSE(Y_test, rf_predictions))
    print ("SVM Test RMSE: ", calculate_RMSE(Y_test, svm_predictions))